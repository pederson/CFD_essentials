TODO:

- follow these conventions: https://www.doc.ic.ac.uk/lab/cplus/c++.rules/chap7.html
	- inline member functions
	- copy constructor
	- const member functions
	- virtual destructor for base classes
	- assignment operator
	- always const reference to member data from public member functions
	- private member data should be prefixed with "_" and the public
	  data access should be a const & function with the same name but
	  without the "_" (e.g. _xdata and xdata()) 

- Change functions to accept const pointers and then copy the data
- Change functions to output const references instead of pointers
- Shading and Light source for mesh model viewer
- Create getters and setters for everything (encapsulation)
- support for cylindrical and polar coordinates
- Class for saving simulation output
- Create separate Static Mesh and Mutable Mesh classes

- add a ::print_detailed() function to classes for detailed debugging
	- idea: store it all in vectors
	- query the size to determine if 
	- access the user-defined data (const reference) by a ::.data(std::string field) call
- make constructors that work with raw data const pointers

- Interface for libMesh, Eigen, Boost, CGAL, and any other third party libraries that are useful

- make separate object files that can be used elsewhere, like Point. Or use CGAL.

- Something is wrong with the Hull->contains_point() code...
- color by boundary doesn't work properly

- Check out the Fluent .cas, .msh and .neu files to see how they are stored. Maybe also be able to read these in and print them out. Also check out Ansys .cmdb and .dsdb format.
- Check out AutoCAD .dxf file format for parametric models. Also look at .obj and .ply formats. Look at .step and .iges files for 3D models

- Doxygen comments for everything
- Equation setter
- Chemistry setter and data (lxcat?)
- Boundary conditions/ Initial Conditions
- Source setter
- Matrix equation assembler (parallelizable)
- Matrix equation solver (parallelizable)


:::::::Done:::::::
X - Mesh Class
X - Visualizer
X - Property setter
X - Geometry builder
X - Convert everything that uses char* to use std::string instead
